source("http://bioconductor.org/biocLite.R")
biocLite(c("ConsensusClusterPlus"))
library(ConsensusClusterPlus)

###Because the genesets compose of overlapped genes, it is required that the centroid gene sets should be identified to perform better partition for different groups of Patients/Controls

##Input was the top 29 deregulated genesets

diff.c7.pds=read.csv("gene and path PDS list/diff.c7.txt",sep="\t")

###Perform consensus clustering on the columns of the matrix (ie. the geneset)
head(diff.c7.pds)
#                              wk0_hc_3026 wk0_hc_3020 wk0_hc_3019 wk0_hc_3013 wk0_hc_3010
#GSE27786_BCELL_VS_MONO_MAC_UP   0.2386301   0.2507313   0.4736114   0.4617989   0.0000000


##Transform the matrix so the gene sets become the columns
data=t(as.matrix(diff.c7.pds))
#dim(data)
#[1] 43 29

###Order the matrix with highest median absolute deviation
mads=apply(data,1,mad)
d=data[rev(order(mads)),]


#Consensus clustering performed with 80% item resampling (pItem), 80% gene resampling (pFeature), a maximum evalulated k of 6 (maxK)
#100 resamplings (reps), 
#run consensus cluster, with HC
results.hc.euclidean = ConsensusClusterPlus(d,maxK=6,reps=100,pItem=0.8,pFeature=0.8,
                                            title="c7.diff.pds.euclidean",clusterAlg="hc",#hierarchical clustering (clusterAlg) upon 1- Pearson correlation
                                            distance="euclidean",seed=199,plot="pdf")

#k-means clustering:
results.kmdist = ConsensusClusterPlus(dist(t(d)),maxK=6,reps=100,pItem=0.8,pFeature=0.8,
                                      clusterAlg="kmdist",#only supports a euclidean distance
                                      title="c7.diff.pds.kmeansClustering",plot="pdf",seed=299)
##PAM
results.pam = ConsensusClusterPlus(d,maxK=6,reps=100,pItem=0.8,pFeature=0.8,
                                   clusterAlg="pam",distance="euclidean",
                                   title="c7.diff.pds.pam",plot="pdf",seed=399)
                                   
#output of ConsensusClusterPlus
results.pam[[3]]$consensusClass

results.kmdist[[3]]$consensusClass
                                   
##Silhouette measure (package cluster) is a metric calculated for each observation to see how well the individual fits into the cluster 
#Silhouette values close to one for each observation: the fit was good
#Silhouette closer to zero: the fit was not good
require(cluster)

D <- daisy(as.matrix(diff.c7.pds))

plot(silhouette(results.kmdist[[3]]$consensusMatrix, D), col=1:3)
plot(silhouette(results.kmdist[[4]]$consensusMatrix, D), col=1:4)

#Draw a kmeans with visualization
library(pheatmap)
kmeans3 <- pheatmap(d,kmeans_k = 3)
                                                            
#create the cluster table from cons.clustering result
clustered.data <- cbind(diff.c7.pds,kmeans3[["kmeans"]])

###bring out the centers as centroids
centroids=kmeans3$centers

##Patients partrition 
###Transform so the matrix have the patients as per columns (cons.clustering per rows)
data=centroids

dim(data)
#[1]3 26

###median absolute deviation
mads=apply(data,1,mad)
d=data[rev(order(mads)),]

#median center genes
d = as.matrix(sweep(d,1, apply(d,1,median,na.rm=T)))


########Consensus Clustering on centroids
results.hc.euclidean = ConsensusClusterPlus(d,maxK=6,reps=100,pItem=0.8,pFeature=0.8,
                                            title="patients.part.euclidean",clusterAlg="hc",
                                            distance="euclidean",seed=199,plot="pdf")

# k-means clustering:Note: The km (kmeans) option only supports a euclidean distance metric when supplying a data matrix.  
results.kmdist = ConsensusClusterPlus(dist(t(d)),maxK=6,reps=100,pItem=0.8,
                                      clusterAlg="kmdist",
                                      title="patients.part.kmeansClustering",plot="pdf",seed=299)

results.pam = ConsensusClusterPlus(d,maxK=6,reps=100,pItem=0.8,pFeature=0.8,
                                   clusterAlg="pam",distance="euclidean",
                                   title="patients.part.pam",plot="pdf",seed=399)


####HC appears to partition 3 groups of patients and controls
D.patients <- daisy(as.matrix(t(data)))
str(D.patients)

#Compare between 3 and 4 kmeans 
plot(silhouette(results.kmdist [[2]][["consensusClass"]], D.patients), col=1:2)

plot(silhouette(results.kmdist [[3]][["consensusClass"]], D.patients), col=1:3)

plot(silhouette(results.kmdist[[4]][["consensusClass"]], D.patients), col=1:4)

clustnum.pat=results.kmdist[[3]][["consensusClass"]]

clustered.data.patients <- cbind(t(data), as.data.frame(clustnum.pat))





